//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dnSpy.Decompiler.ILSpy.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class dnSpy_Decompiler_ILSpy_Core_Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal dnSpy_Decompiler_ILSpy_Core_Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("dnSpy.Decompiler.ILSpy.Core.Properties.dnSpy.Decompiler.ILSpy.Core.Resources", typeof(dnSpy_Decompiler_ILSpy_Core_Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add using declarations.
        /// </summary>
        public static string DecompilerSettings_AddUsingDeclarations {
            get {
                return ResourceManager.GetString("DecompilerSettings_AddUsingDeclarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always inline local variables if possible.
        /// </summary>
        public static string DecompilerSettings_AggressiveInlining {
            get {
                return ResourceManager.GetString("DecompilerSettings_AggressiveInlining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow extension &apos;Add&apos; methods in collection initializer expressions.
        /// </summary>
        public static string DecompilerSettings_AllowExtensionAddMethodsInCollectionInitializerExpressions {
            get {
                return ResourceManager.GetString("DecompilerSettings_AllowExtensionAddMethodsInCollectionInitializerExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;ref&apos; extension methods.
        /// </summary>
        public static string DecompilerSettings_AllowExtensionMethodSyntaxOnRef {
            get {
                return ResourceManager.GetString("DecompilerSettings_AllowExtensionMethodSyntaxOnRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow field initializers.
        /// </summary>
        public static string DecompilerSettings_AllowFieldInitializers {
            get {
                return ResourceManager.GetString("DecompilerSettings_AllowFieldInitializers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always cast targets of explicit interface implementation calls.
        /// </summary>
        public static string DecompilerSettings_AlwaysCastTargetsOfExplicitInterfaceImplementationCalls {
            get {
                return ResourceManager.GetString("DecompilerSettings_AlwaysCastTargetsOfExplicitInterfaceImplementationCalls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always generate exception variables in catch blocks unless type is Object.
        /// </summary>
        public static string DecompilerSettings_AlwaysGenerateExceptionVariableForCatchBlocksUnlessTypeIsObject {
            get {
                return ResourceManager.GetString("DecompilerSettings_AlwaysGenerateExceptionVariableForCatchBlocksUnlessTypeIsObjec" +
                        "t", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always qualify member references.
        /// </summary>
        public static string DecompilerSettings_AlwaysQualifyMemberReferences {
            get {
                return ResourceManager.GetString("DecompilerSettings_AlwaysQualifyMemberReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always show enum member values.
        /// </summary>
        public static string DecompilerSettings_AlwaysShowEnumMemberValues {
            get {
                return ResourceManager.GetString("DecompilerSettings_AlwaysShowEnumMemberValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always use braces.
        /// </summary>
        public static string DecompilerSettings_AlwaysUseBraces {
            get {
                return ResourceManager.GetString("DecompilerSettings_AlwaysUseBraces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always fully qualify namespaces using the &quot;global::&quot; prefix.
        /// </summary>
        public static string DecompilerSettings_AlwaysUseGlobal {
            get {
                return ResourceManager.GetString("DecompilerSettings_AlwaysUseGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array initializer expressions.
        /// </summary>
        public static string DecompilerSettings_ArrayInitializerExpressions {
            get {
                return ResourceManager.GetString("DecompilerSettings_ArrayInitializerExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User-defined checked operators.
        /// </summary>
        public static string DecompilerSettings_CheckedOperators {
            get {
                return ResourceManager.GetString("DecompilerSettings_CheckedOperators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Code style.
        /// </summary>
        public static string DecompilerSettings_CodeStyle {
            get {
                return ResourceManager.GetString("DecompilerSettings_CodeStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompilation order.
        /// </summary>
        public static string DecompilerSettings_DecompilationOrder {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompilationOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile anonymous methods/lambdas.
        /// </summary>
        public static string DecompilerSettings_DecompileAnonMethods {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileAnonMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile anonymous types.
        /// </summary>
        public static string DecompilerSettings_DecompileAnonymousTypes {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileAnonymousTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile async methods (async/await).
        /// </summary>
        public static string DecompilerSettings_DecompileAsyncMethods {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileAsyncMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile automatic events.
        /// </summary>
        public static string DecompilerSettings_DecompileAutoEvents {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileAutoEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile automatic events.
        /// </summary>
        public static string DecompilerSettings_DecompileAutomaticEvents {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileAutomaticEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile automatic properties.
        /// </summary>
        public static string DecompilerSettings_DecompileAutomaticProperties {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileAutomaticProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile automatic properties.
        /// </summary>
        public static string DecompilerSettings_DecompileAutoProps {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileAutoProps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile await in catch/finally blocks.
        /// </summary>
        public static string DecompilerSettings_DecompileAwaitInCatchFinallyBlocks {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileAwaitInCatchFinallyBlocks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile C# 1.0 &apos;public unsafe fixed int arr[10];&apos; members.
        /// </summary>
        public static string DecompilerSettings_DecompileC10PublicUnsafeFixedIntArr10Members {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileC10PublicUnsafeFixedIntArr10Members", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile [DecimalConstant(...)] as simple literal values.
        /// </summary>
        public static string DecompilerSettings_DecompileDecimalConstantAsSimpleLiteralValues {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileDecimalConstantAsSimpleLiteralValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile enumerators (yield return).
        /// </summary>
        public static string DecompilerSettings_DecompileEnumerators {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileEnumerators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile expression trees.
        /// </summary>
        public static string DecompilerSettings_DecompileExprTrees {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileExprTrees", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile foreach statements.
        /// </summary>
        public static string DecompilerSettings_DecompileForeachStatements {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileForeachStatements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile foreach statements with GetEnumerator extension methods.
        /// </summary>
        public static string DecompilerSettings_DecompileForEachWithGetEnumeratorExtension {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileForEachWithGetEnumeratorExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile lock statements.
        /// </summary>
        public static string DecompilerSettings_DecompileLockStatements {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileLockStatements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile query expressions.
        /// </summary>
        public static string DecompilerSettings_DecompileQueryExpr {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileQueryExpr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompiler behavior.
        /// </summary>
        public static string DecompilerSettings_DecompilerBehavior {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompilerBehavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile switch on string.
        /// </summary>
        public static string DecompilerSettings_DecompileSwitchOnString {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileSwitchOnString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile use of the &apos;dynamic&apos; type.
        /// </summary>
        public static string DecompilerSettings_DecompileUseOfTheDynamicType {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileUseOfTheDynamicType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile using statements.
        /// </summary>
        public static string DecompilerSettings_DecompileUsingStatements {
            get {
                return ResourceManager.GetString("DecompilerSettings_DecompileUsingStatements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detect deconstruction assignments.
        /// </summary>
        public static string DecompilerSettings_Deconstruction {
            get {
                return ResourceManager.GetString("DecompilerSettings_Deconstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dictionary initializer expressions.
        /// </summary>
        public static string DecompilerSettings_DictionaryInitializerExpressions {
            get {
                return ResourceManager.GetString("DecompilerSettings_DictionaryInitializerExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transform to do-while, if possible.
        /// </summary>
        public static string DecompilerSettings_DoWhileStatement {
            get {
                return ResourceManager.GetString("DecompilerSettings_DoWhileStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile calli to invocation expression.
        /// </summary>
        public static string DecompilerSettings_EmitCalliAsInvocationExpression {
            get {
                return ResourceManager.GetString("DecompilerSettings_EmitCalliAsInvocationExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use file-scoped namespace declarations.
        /// </summary>
        public static string DecompilerSettings_FileScopedNamespaces {
            get {
                return ResourceManager.GetString("DecompilerSettings_FileScopedNamespaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transform to for, if possible.
        /// </summary>
        public static string DecompilerSettings_ForStatement {
            get {
                return ResourceManager.GetString("DecompilerSettings_ForStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add namespaces to all types.
        /// </summary>
        public static string DecompilerSettings_FullyQualifyAllTypes {
            get {
                return ResourceManager.GetString("DecompilerSettings_FullyQualifyAllTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a namespace to types with the same name.
        /// </summary>
        public static string DecompilerSettings_FullyQualifyAmbiguousTypeNames {
            get {
                return ResourceManager.GetString("DecompilerSettings_FullyQualifyAmbiguousTypeNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function pointers.
        /// </summary>
        public static string DecompilerSettings_FunctionPointers {
            get {
                return ResourceManager.GetString("DecompilerSettings_FunctionPointers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile getter-only automatic properties.
        /// </summary>
        public static string DecompilerSettings_GetterOnlyAutomaticProperties {
            get {
                return ResourceManager.GetString("DecompilerSettings_GetterOnlyAutomaticProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hexadecimal numbers.
        /// </summary>
        public static string DecompilerSettings_HexadecimalNumbers {
            get {
                return ResourceManager.GetString("DecompilerSettings_HexadecimalNumbers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow init; accessors.
        /// </summary>
        public static string DecompilerSettings_InitAccessors {
            get {
                return ResourceManager.GetString("DecompilerSettings_InitAccessors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert parentheses for readability.
        /// </summary>
        public static string DecompilerSettings_InsertParenthesesForReadability {
            get {
                return ResourceManager.GetString("DecompilerSettings_InsertParenthesesForReadability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use increment and decrement operators.
        /// </summary>
        public static string DecompilerSettings_IntroduceIncrementAndDecrement {
            get {
                return ResourceManager.GetString("DecompilerSettings_IntroduceIncrementAndDecrement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Introduce local functions.
        /// </summary>
        public static string DecompilerSettings_IntroduceLocalFunctions {
            get {
                return ResourceManager.GetString("DecompilerSettings_IntroduceLocalFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IsByRefLikeAttribute should be replaced with &apos;ref&apos; modifiers on structs.
        /// </summary>
        public static string DecompilerSettings_IsByRefLikeAttributeShouldBeReplacedWithRefModifiersOnStructs {
            get {
                return ResourceManager.GetString("DecompilerSettings_IsByRefLikeAttributeShouldBeReplacedWithRefModifiersOnStructs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IsReadOnlyAttribute should be replaced with &apos;readonly&apos;/&apos;in&apos; modifiers on structs/parameters.
        /// </summary>
        public static string DecompilerSettings_IsReadOnlyAttributeShouldBeReplacedWithReadonlyInModifiersOnStructsParameters {
            get {
                return ResourceManager.GetString("DecompilerSettings_IsReadOnlyAttributeShouldBeReplacedWithReadonlyInModifiersOnSt" +
                        "ructsParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IsUnmanagedAttribute on type parameters should be replaced with &apos;unmanaged&apos; constraints.
        /// </summary>
        public static string DecompilerSettings_IsUnmanagedAttributeOnTypeParametersShouldBeReplacedWithUnmanagedConstraints {
            get {
                return ResourceManager.GetString("DecompilerSettings_IsUnmanagedAttributeOnTypeParametersShouldBeReplacedWithUnmana" +
                        "gedConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use assignment expressions such as in while ((count = Do()) != 0) ;.
        /// </summary>
        public static string DecompilerSettings_MakeAssignmentExpressions {
            get {
                return ResourceManager.GetString("DecompilerSettings_MakeAssignmentExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max number of array elements to show.
        /// </summary>
        public static string DecompilerSettings_MaxArrayElements {
            get {
                return ResourceManager.GetString("DecompilerSettings_MaxArrayElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max string length.
        /// </summary>
        public static string DecompilerSettings_MaxStringLength {
            get {
                return ResourceManager.GetString("DecompilerSettings_MaxStringLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add &apos;private&apos; modifier to type members.
        /// </summary>
        public static string DecompilerSettings_MemberAddPrivateModifier {
            get {
                return ResourceManager.GetString("DecompilerSettings_MemberAddPrivateModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member ordering and sorting.
        /// </summary>
        public static string DecompilerSettings_MemberOrderingAndSorting {
            get {
                return ResourceManager.GetString("DecompilerSettings_MemberOrderingAndSorting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use nint/nuint types.
        /// </summary>
        public static string DecompilerSettings_NativeIntegers {
            get {
                return ResourceManager.GetString("DecompilerSettings_NativeIntegers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile ?. and ?[] operators.
        /// </summary>
        public static string DecompilerSettings_NullPropagation {
            get {
                return ResourceManager.GetString("DecompilerSettings_NullPropagation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Treat (U)IntPtr as n(u)int.
        /// </summary>
        public static string DecompilerSettings_NumericIntPtr {
            get {
                return ResourceManager.GetString("DecompilerSettings_NumericIntPtr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object/collection initializer expressions.
        /// </summary>
        public static string DecompilerSettings_ObjectCollectionInitializerExpressions {
            get {
                return ResourceManager.GetString("DecompilerSettings_ObjectCollectionInitializerExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile object or collection initializers.
        /// </summary>
        public static string DecompilerSettings_ObjectOrCollectionInitializers {
            get {
                return ResourceManager.GetString("DecompilerSettings_ObjectOrCollectionInitializers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show one custom attribute per line.
        /// </summary>
        public static string DecompilerSettings_OneCustomAttributePerLine {
            get {
                return ResourceManager.GetString("DecompilerSettings_OneCustomAttributePerLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use pattern matching expressions.
        /// </summary>
        public static string DecompilerSettings_PatternMatching {
            get {
                return ResourceManager.GetString("DecompilerSettings_PatternMatching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record classes.
        /// </summary>
        public static string DecompilerSettings_RecordClasses {
            get {
                return ResourceManager.GetString("DecompilerSettings_RecordClasses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record structs.
        /// </summary>
        public static string DecompilerSettings_RecordStructs {
            get {
                return ResourceManager.GetString("DecompilerSettings_RecordStructs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove dead and side effect free code (use with caution!).
        /// </summary>
        public static string DecompilerSettings_RemoveDeadCode {
            get {
                return ResourceManager.GetString("DecompilerSettings_RemoveDeadCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove dead stores (use with caution!).
        /// </summary>
        public static string DecompilerSettings_RemoveDeadStores {
            get {
                return ResourceManager.GetString("DecompilerSettings_RemoveDeadStores", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove empty default constructors.
        /// </summary>
        public static string DecompilerSettings_RemoveEmptyDefaultCtors {
            get {
                return ResourceManager.GetString("DecompilerSettings_RemoveEmptyDefaultCtors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace &apos;new delegate-class(xxx)&apos; with &apos;xxx&apos;.
        /// </summary>
        public static string DecompilerSettings_RemoveNewDelegateClass {
            get {
                return ResourceManager.GetString("DecompilerSettings_RemoveNewDelegateClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove optional arguments, if possible.
        /// </summary>
        public static string DecompilerSettings_RemoveOptionalArgumentsIfPossible {
            get {
                return ResourceManager.GetString("DecompilerSettings_RemoveOptionalArgumentsIfPossible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required members.
        /// </summary>
        public static string DecompilerSettings_RequiredMembers {
            get {
                return ResourceManager.GetString("DecompilerSettings_RequiredMembers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;scoped&apos; lifetime annotation.
        /// </summary>
        public static string DecompilerSettings_ScopedRef {
            get {
                return ResourceManager.GetString("DecompilerSettings_ScopedRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Separate local variable declarations and initializers (int x = 5; -&gt; int x; x = 5;), if possible.
        /// </summary>
        public static string DecompilerSettings_SeparateLocalVariableDeclarations {
            get {
                return ResourceManager.GetString("DecompilerSettings_SeparateLocalVariableDeclarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show hidden compiler generated types and methods.
        /// </summary>
        public static string DecompilerSettings_ShowCompilerGeneratedTypes {
            get {
                return ResourceManager.GetString("DecompilerSettings_ShowCompilerGeneratedTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show IL opcode comments.
        /// </summary>
        public static string DecompilerSettings_ShowILComments {
            get {
                return ResourceManager.GetString("DecompilerSettings_ShowILComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show IL instruction bytes.
        /// </summary>
        public static string DecompilerSettings_ShowILInstrBytes {
            get {
                return ResourceManager.GetString("DecompilerSettings_ShowILInstrBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show line numbers and filenames if available.
        /// </summary>
        public static string DecompilerSettings_ShowPdbInfo {
            get {
                return ResourceManager.GetString("DecompilerSettings_ShowPdbInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show tokens, RVAs and file offsets.
        /// </summary>
        public static string DecompilerSettings_ShowTokensRvasOffsets {
            get {
                return ResourceManager.GetString("DecompilerSettings_ShowTokensRvasOffsets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show XML documentation in decompiled code.
        /// </summary>
        public static string DecompilerSettings_ShowXMLDocComments {
            get {
                return ResourceManager.GetString("DecompilerSettings_ShowXMLDocComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort custom attributes.
        /// </summary>
        public static string DecompilerSettings_SortCustomAttributes {
            get {
                return ResourceManager.GetString("DecompilerSettings_SortCustomAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort methods, fields, properties, events and types.
        /// </summary>
        public static string DecompilerSettings_SortMethods {
            get {
                return ResourceManager.GetString("DecompilerSettings_SortMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort switch cases by IL instruction offset.
        /// </summary>
        public static string DecompilerSettings_SortSwitchCasesByILOffset {
            get {
                return ResourceManager.GetString("DecompilerSettings_SortSwitchCasesByILOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Place &apos;System&apos; directives first when sorting usings.
        /// </summary>
        public static string DecompilerSettings_SortSystemFirst {
            get {
                return ResourceManager.GetString("DecompilerSettings_SortSystemFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detect switch on integer even if IL code does not use a jump table.
        /// </summary>
        public static string DecompilerSettings_SparseIntegerSwitch {
            get {
                return ResourceManager.GetString("DecompilerSettings_SparseIntegerSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decompile &apos;string.Concat(a, b)&apos; calls into &apos;a + b&apos;.
        /// </summary>
        public static string DecompilerSettings_StringConcat {
            get {
                return ResourceManager.GetString("DecompilerSettings_StringConcat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add &apos;internal&apos; modifier to types.
        /// </summary>
        public static string DecompilerSettings_TypeAddInternalModifier {
            get {
                return ResourceManager.GetString("DecompilerSettings_TypeAddInternalModifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsigned right shift (&gt;&gt;&gt;).
        /// </summary>
        public static string DecompilerSettings_UnsignedRightShift {
            get {
                return ResourceManager.GetString("DecompilerSettings_UnsignedRightShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use discards.
        /// </summary>
        public static string DecompilerSettings_UseDiscards {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseDiscards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use expression-bodied member syntax for get-only properties.
        /// </summary>
        public static string DecompilerSettings_UseExpressionBodiedMemberSyntaxForGetOnlyProperties {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseExpressionBodiedMemberSyntaxForGetOnlyProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use extension method syntax.
        /// </summary>
        public static string DecompilerSettings_UseExtensionMethodSyntax {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseExtensionMethodSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use implicit method group conversions.
        /// </summary>
        public static string DecompilerSettings_UseImplicitMethodGroupConversions {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseImplicitMethodGroupConversions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use lambda syntax, if possible.
        /// </summary>
        public static string DecompilerSettings_UseLambdaSyntaxIfPossible {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseLambdaSyntaxIfPossible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use lifted operators for nullables.
        /// </summary>
        public static string DecompilerSettings_UseLiftedOperatorsForNullables {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseLiftedOperatorsForNullables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use variable names from debug symbols, if available.
        /// </summary>
        public static string DecompilerSettings_UseLocalNameFromSyms {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseLocalNameFromSyms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use named arguments.
        /// </summary>
        public static string DecompilerSettings_UseNamedArguments {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseNamedArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use non-trailing named arguments.
        /// </summary>
        public static string DecompilerSettings_UseNonTrailingNamedArguments {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseNonTrailingNamedArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use out variable declarations.
        /// </summary>
        public static string DecompilerSettings_UseOutVariableDeclarations {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseOutVariableDeclarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use pattern-based fixed statement.
        /// </summary>
        public static string DecompilerSettings_UsePatternBasedFixedStatement {
            get {
                return ResourceManager.GetString("DecompilerSettings_UsePatternBasedFixedStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use primary constructor  syntax with records.
        /// </summary>
        public static string DecompilerSettings_UsePrimaryConstructorSyntax {
            get {
                return ResourceManager.GetString("DecompilerSettings_UsePrimaryConstructorSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use ref locals to accurately represent order of evaluation.
        /// </summary>
        public static string DecompilerSettings_UseRefLocalsForAccurateOrderOfEvaluation {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseRefLocalsForAccurateOrderOfEvaluation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Order members in source code order.
        /// </summary>
        public static string DecompilerSettings_UseSourceCodeOrder {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseSourceCodeOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use stackalloc initializer syntax.
        /// </summary>
        public static string DecompilerSettings_UseStackallocInitializerSyntax {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseStackallocInitializerSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use string interpolation.
        /// </summary>
        public static string DecompilerSettings_UseStringInterpolation {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseStringInterpolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use throw expressions.
        /// </summary>
        public static string DecompilerSettings_UseThrowExpressions {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseThrowExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use tuple type syntax.
        /// </summary>
        public static string DecompilerSettings_UseTupleTypeSyntax {
            get {
                return ResourceManager.GetString("DecompilerSettings_UseTupleTypeSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UTF-8 string literals.
        /// </summary>
        public static string DecompilerSettings_Utf8StringLiterals {
            get {
                return ResourceManager.GetString("DecompilerSettings_Utf8StringLiterals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;with&apos; initializer expressions.
        /// </summary>
        public static string DecompilerSettings_WithExpressions {
            get {
                return ResourceManager.GetString("DecompilerSettings_WithExpressions", resourceCulture);
            }
        }
    }
}
